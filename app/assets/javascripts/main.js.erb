//= require phaser
var game = new Phaser.Game(1000, 500,Phaser.AUTO, '', { preload: preload, create: create, update: update });

function preload() {

  game.load.image('coffee', '<%= image_path('firstaid.png') %>');
  game.load.image('bottle', '<%= image_path('vodka.png') %>');
  game.load.image('tiles1', '<%= image_path('sheet.png')%>');
  game.load.image('barrel', '<%= image_path('barrel.png')%>');
  game.load.spritesheet('dude', '<%= image_path('baddie.png') %>', 45, 48.5);
  game.load.spritesheet('guy', '<%= image_path('dude.png') %>', 45, 48);
  //preloaded music audio
  game.load.audio('junes', '<%= asset_path('JUNE_EFFECT_IN_GAME') %>');
  game.scale.pageAlignHorizontally = true;
  game.scale.pageAlignVertically = true;




}
//created music varibale
var music;
var player;
var playertwo;
var platforms;
var groundLayer;
var backgroundLayer;
var cursors;
var coffees;
var bottles;
var score = 0;
var scoreText;
var map;
var tiles;
var layer;

// *********
// LOADING IMAGES TO SCREEN



// ****************** CREATING PLAYER AND MOVEMENTS
function create() {


    game.physics.startSystem(Phaser.Physics.ARCADE);
   

   

    


     platforms = game.add.group();

    game.world.setBounds(0, 0);

    game.physics.startSystem(Phaser.Physics.ARCADE);

    platforms = game.add.group();

    //calls on the music variable created to play the game
    music = game.add.audio('junes');
    music.play();

    game.world.setBounds(1,1);



    game.add.sprite(0, 0, 'Tile Layer 1');



    platforms = game.add.group();

    platforms.enableBody = true;



     var ground = platforms.create(0, game.world.height - 0, 'Tile Layer 1');


    ground.scale.setTo(0, 0);

    ground.body.immovable = true;
    var ledge = platforms.create( 'Tile Layer 1');
    ledge.body.immovable = true;

    // ledge = platforms.create( 'Tile Layer 1');

    // ledge.body.immovable = true;


    player = game.add.sprite(0, game.world.height - 0, 'dude');
    playertwo = game.add.sprite(0, game.world.height - 0, 'guy');


    game.physics.arcade.enable(player);
    game.physics.arcade.enable(playertwo);
    game.camera.follow(player);

    player.body.bounce.y = 0.2;
    player.body.gravity.y = 1100;
    player.body.collideWorldBounds = true;

    player.animations.add('left', [3,4, 5], 10, true);
    player.animations.add('right', [ 6,7,8], 10, true);



    playertwo.body.bounce.y = 0.2;
    playertwo.body.gravity.y = 1100;
    playertwo.body.collideWorldBounds = true;

    playertwo.animations.add('left', [3,4, 5], 10, true);
    playertwo.animations.add('right', [ 6,7,8], 10, true);

// COFFEE ITEMS?

  coffees = game.add.group();

  coffees.enableBody = true;
        for (var i = 0; i < 40; i++)
        {
          var coffee = coffees.create(i * 100, 20, 'coffee');

          coffee.body.gravity.y = 700;

          coffee.body.bounce.y = 0.5 + Math.random() * 0.5;
        }

// BOTTLE ITEMS

        bottles = game.add.group();

        bottles.enableBody = true;
    for (var i = 0; i < 100; i++)
    {
        var bottle = bottles.create(i * 100, 40, 'bottle');

        bottle.body.gravity.y = 900;

        bottle.body.bounce.y = 0.2 + Math.random() * 0.2;
    }

//  PLATFORMS ITEMS
     for (var i = 0; i < 20; i++)
     {
         var ledge = platforms.create(i * 105, 180, 'GroundLayer');

        ledge.body.immovable = true;

         ground.body.bounce.y = 0.2 + Math.random() * 0.2;
    }



// SCORE TEXT

    cursors = game.input.keyboard.createCursorKeys();

this.keys= game.input.keyboard.addKeys( { 'up': Phaser.KeyCode.W, 'down': Phaser.KeyCode.S, 'left': Phaser.KeyCode.A, 'right': Phaser.KeyCode.D } );

            // SCORE TEXT


    scoreText = game.add.text(500, 0, 'Drinks: 0', { fontSize: '32px', fill: 'white' });

    this.add
        .text(100, 0, "Right ➡️ Space to Shoot 🔫 Left ⬅️ \nDon't Get Hit😵💢 ",{
          font: "18px monospace",
          fill: "#000000",
          // padding: { x: 20, y: 10 },
          backgroundColor: "#ffffff"
        })


}

// *********************************************
 // UPDATING MOVEMENT AND GRAVITY WITH SCORE ADDED

function update() {
    var hitPlatform = game.physics.arcade.collide(player, game.groundLayer);

    game.physics.arcade.overlap(player, bottles, collectDiamond, null, this)
    game.physics.arcade.overlap(player, coffees, collectCoffee, null, this)

    game.physics.arcade.collide(bottles, game.groundLayer);
    game.physics.arcade.collide(coffees, game.groundLayer);

    game.physics.arcade.collide(bottles, layer);
    game.physics.arcade.collide(coffees, layer);


    game.physics.arcade.collide(player, layer);

    player.body.velocity.x = 0;

    cursors = game.input.keyboard.createCursorKeys();


   

    

    if (cursors.left.isDown)
    {
        player.body.velocity.x = -150;

        player.animations.play('left');
    }
    else if (cursors.right.isDown)
    {
        player.body.velocity.x = 150;

        player.animations.play('right');
    }
    else
    {
        player.animations.stop();

        player.frame = 1;
    }

    



    var hitPlatform = game.physics.arcade.collide(playertwo, game.groundLayer);
    game.physics.arcade.overlap(playertwo, bottles, collectDiamond, null, this)

    game.physics.arcade.collide(playertwo, game.groundLayer);

    game.physics.arcade.overlap(playertwo, coffees, collectCoffee, null, this)


    playertwo.body.velocity.x = 0;
    if (this.keys.left.isDown)
    {
        playertwo.body.velocity.x = -150;

        playertwo.animations.play('left');
    }
    else if (this.keys.right.isDown)
    {
        playertwo.body.velocity.x = 150;

        playertwo.animations.play('right');
    }
    else
    {
        playertwo.animations.stop();

        playertwo.frame = 1;
    }

    if (this.keys.up.isDown && playertwo.body.touching.down && hitPlatform)
    {
        playertwo.body.velocity.y = -350;
    }



     if (score === 3) {
            // alert('You are drunk! Go Home!!')
            score = 0
             // game.camera.shake(0.005, 3000000);


          }

}


// ******************************
// Health Bar
// _text


// *****************************************
function collectDiamond (player, bottle) {
  bottle.kill()
  score += 1

  // game.camera.fade(0x000000, 500);


// SCORE
  scoreText.text = 'Drinks: ' + score;
// ENERGY
  let energy = document.getElementById("energy");
  energy.value -= 2;


  if (energy.value === 0){
    alert('game over!!')
    window.location.reload(false);

  }



  }




    // alert('game over!! Your are way to drunk');





function collectCoffee (player, coffee) {
  coffee.kill()
  score -= 1
  game.camera.resetFX();

  energy.value += 5;
  scoreText.text = 'Drinks: ' + score;

  // scoreText.text = 'Drinks: ' + score
}

// ************************************

// POP UP