//= require phaser
var game = new Phaser.Game(1000, 500, Phaser.AUTO, 'game', { preload: preload, create: create, update: update });

// LOADING IMAGES TO SCREEN
function preload() {
  // game.load.image('coffee', '<%= image_path('firstaid.png') %>');
<<<<<<< HEAD
  // game.load.image('background', '<%= image_path('PubBar.png') %>');
  game.load.image('bar', '<%= image_path('PubBar.png') %>', 50,50,50,50);

  game.load.image('ground', '<%= image_path('barrel.png') %>');
=======
  game.load.image('background', '<%= image_path('PubBar.png') %>');
>>>>>>> richard
  game.load.image('bottle', '<%= image_path('vodka.png') %>');
  game.load.image('bullet','<%= image_path('bullet.png') %>');
  game.load.image('like','<%= image_path('like.png') %>');

  game.load.spritesheet('dude', '<%= image_path('baddie.png') %>', 45, 48.5);
  game.load.spritesheet('guy', '<%= image_path('dude.png') %>', 45, 48);
  game.scale.pageAlignHorizontally = true;
  game.scale.pageAlignVertically = true;
}

var player;
var bottle;
var playertwo;
var platforms;
var cursors;
var bottles;
var score = 0;
var scoreText;
var lives;
var map;
var tiles;
var like;
var fireButton;

var bullets = 0;
<<<<<<< HEAD
  var bulletSpeed = 600;
=======
var bulletSpeed = 600;
var lives = 0;
>>>>>>> richard

// ****************** CREATING PLAYER AND MOVEMENTS
function create() {
  game.physics.startSystem(Phaser.Physics.ARCADE);
  // game.world.setBounds(0, 0);
  game.add.sprite(0, 0, 'background');

<<<<<<< HEAD
  var image = game.add.image(100, 100, 'bar');


//Create Bullets
=======
>>>>>>> richard
  bullets = game.add.group();
     bullets.enableBody = true;
     bullets.physicsBodyType = Phaser.Physics.ARCADE;
     bullets.createMultiple(30, 'bullet');
     bullets.setAll('anchor.x', 0.5);
     bullets.setAll('anchor.y', 1);
     bullets.setAll('outOfBoundsKill', true);
     bullets.setAll('checkWorldBounds', true);




  platforms = game.add.group();
  platforms.enableBody = true;

  var ground = platforms.create(0, game.world.height - 0, 'ground');
  ground.scale.setTo(0, 0);

  ground.body.immovable = true;
  var ledge = platforms.create( 'ground');
  ledge.body.immovable = true;

  player = game.add.sprite(0, game.world.height - 0, 'dude');
  playertwo = game.add.sprite(0, game.world.height - 0, 'guy');


  game.physics.arcade.enable(player);
  game.physics.arcade.enable(playertwo);
  game.camera.follow(player);

  player.body.bounce.y = 0.2;
  player.body.gravity.y = 1100;
  player.body.collideWorldBounds = true;

  player.animations.add('left', [3,4, 5], 10, true);
  player.animations.add('right', [ 6,7,8], 10, true);



  playertwo.body.bounce.y = 0.2;
  playertwo.body.gravity.y = 1100;
  playertwo.body.collideWorldBounds = true;

  playertwo.animations.add('left', [3,4, 5], 10, true);
  playertwo.animations.add('right', [ 6,7,8], 10, true);

  // COFFEE ITEMS?


  // BOTTLE ITEMS

  bottles = game.add.group();

  bottles.enableBody = true;
  for (var i = 0; i < 100; i++)
  {
    var bottle = bottles.create(i * 100, -10, 'bottle');

    bottle.body.gravity.y = 900;

    bottle.body.bounce.y = 0.2 + Math.random() * 0.2;
  }
<<<<<<< HEAD
  bottles.physicsBodyType = Phaser.Physics.ARCADE;

  // PLATFORMS ITEMS
  for (var i = 0; i < 20; i++)
=======
  for (var i = 0; i < 30; i++)
>>>>>>> richard
  {
    var ledge = platforms.create(i * (Math.random()*105), Math.random()*500, 'ground');

    ledge.body.immovable = true;
  }




      for (var i = 0; i < 3; i++)
      {

        var like  = game.add.image(-5,3,'like');
        player.addChild(like);

      }


  // SCORE TEXT

  cursors = game.input.keyboard.createCursorKeys();

  this.keys = game.input.keyboard.addKeys( { 'up': Phaser.KeyCode.W, 'down': Phaser.KeyCode.S, 'left': Phaser.KeyCode.A, 'right': Phaser.KeyCode.D } );

  // SCORE TEXT

  scoreText = game.add.text(400, 0, 'Drinks: 0', { fontSize: '32px', fill: 'white' });

  this.add
  .text(100, 0, "run ⇨ jump ⇧ back ⇦ \nDon't Fall ",{
    font: "18px monospace",
    fill: "#000000",
    // padding: { x: 20, y: 10 },
    backgroundColor: "#ffffff"
  })



fireButton = game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);


}


// *********************************************
// UPDATING MOVEMENT AND GRAVITY WITH SCORE ADDED

function update() {
  // var hitPlatform = game.physics.arcade.collide(player, platforms);

  function collisionHandler (bullet, bottle) {

    bullet.kill();
    bottle.kill();

  }

  game.physics.arcade.overlap(player, bottles, collectDiamond, null, this);
  game.physics.arcade.overlap(bullets, bottle, collisionHandler, null, this);

  game.physics.arcade.collide(bullets, bottles);
  game.physics.arcade.collide(bottles, platforms);

  game.physics.arcade.collide(bottles, game.groundLayer);


  game.physics.arcade.collide(player, game.groundLayer);



  player.body.velocity.x = 0;

  cursors = game.input.keyboard.createCursorKeys();

  if (cursors.left.isDown)
  {
    player.body.velocity.x = -150;

    player.animations.play('left');
  }
  else if (cursors.right.isDown)
  {
    player.body.velocity.x = 150;

    player.animations.play('right');
  }
  else
  {
    player.animations.stop();

    player.frame = 1;
  }

  if (cursors.up.isDown && player.body.touching.down && hitPlatform)
  {
    player.body.velocity.y = -350;
  }

  var hitPlatform = game.physics.arcade.collide(playertwo, platforms);
  game.physics.arcade.overlap(playertwo, bottles, collectDiamond, null, this)

  game.physics.arcade.collide(playertwo, game.groundLayer);

<<<<<<< HEAD
  // var hitPlatform = game.physics.arcade.collide(playertwo, platforms);
  game.physics.arcade.overlap(playertwo, bottles, collectDiamond, null, this)

  game.physics.arcade.collide(playertwo, game.groundLayer);


=======
>>>>>>> richard

  playertwo.body.velocity.x = 0;
  if (this.keys.left.isDown)
  {
    playertwo.body.velocity.x = -150;

    playertwo.animations.play('left');
  }
  else if (this.keys.right.isDown)
  {
    playertwo.body.velocity.x = 150;

    playertwo.animations.play('right');
  }
  else
  {
    playertwo.animations.stop();

    playertwo.frame = 1;
  }

  if (this.keys.up.isDown && playertwo.body.touching.down && hitPlatform)
  {
    playertwo.body.velocity.y = -350;
  }



  if (score >= 3) {
    alert('You are drunk! Go Home!!');
    game.camera.shake(0.005, 3000000);
  }

  if (fireButton.isDown)
        {
            fireBullet();
        }

  // function enemyHitsPlayer() {
  //   bullet.kill();
  //   live = lives.getFirstAlive();
  //   if (live)
  //   live.kill();
  //
  // }

        game.physics.arcade.overlap(bullets, bottles, collisionHandler, null, this);


}

function collisionHandler() {
    bullet.kill();
    bottle.kill;
}

function enemyHitsPlayer() {
  bullet.kill();
  live = lives.getFirstAlive();
  if (live)
    live.kill();

}

if (lives.countLiving() < 1)
  {
    player.kill();
    enemyBullets.callAll('kill');

  }





// ******************************
// Health Bar
// _text

  // ******************************
  // Health Bar
  // _text

// *****************************************
function collectDiamond (player, bottle) {
  bottle.kill()
  score += 1

  // game.camera.fade(0x000000, 500);

    // game.camera.fade(0x000000, 500);

  // SCORE
  scoreText.text = 'Drinks: ' + score;
  // ENERGY

  function collisionHandler (bullet, bottle) {

function collisionHandler (bullet, bottle) {


    bullet.kill();
    bottle.kill();
}


<<<<<<< HEAD
function fireBullet () {

=======
function enemyFires() {
  enemyBullet = enemyBullets.getFirstExists(false);
  livingEnemies.length = 0;
  bottles.forEachAlive(function(bottle){
    livingEnemies.push(bottle);
  });
  if(enemyBullet)
    var random = game.rnd.integerInRange(0,livingEnemies.length-1);
    var shooter = livingEnemies[random];
    enemyBullet.reset(shooter.body.x, shooter.body.y);
    game.physics.arcade.moveToObject(enemyBullet, player, 120);
    firingTimer = game.time.now + 2000;

}

  }


  function fireBullet () {
>>>>>>> richard
    if (game.time.now > bulletSpeed)
    {

      bullet = bullets.getFirstExists(false);

      if (bullet)
      {
        bullet.reset(player.x, player.y + 8);
        bullet.body.velocity.y = -400;
        bulletSpeed = game.time.now + 200;
      }
    }
<<<<<<< HEAD

}

//
// function collectCoffee (player, coffee) {
//   coffee.kill()
//   score -= 1
//   game.camera.resetFX();
//
//   energy.value += 5;
//   scoreText.text = 'Drinks: ' + score;
//
//   // scoreText.text = 'Drinks: ' + score
// }
=======
  }
}





// ************************************

// POP UP
>>>>>>> richard
