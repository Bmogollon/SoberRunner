//= require phaser
var game = new Phaser.Game(1000, 500,Phaser.AUTO, '', { preload: preload, create: create, update: update });

function preload() {
<<<<<<< HEAD
  game.load.image('coffee', '<%= image_path('firstaid.png') %>');
  game.load.image('ground', '<%= image_path('barrel.png') %>');
  game.load.image('bottle', '<%= image_path('vodka.png') %>');
  game.load.image('tiles', '<%= image_path('Tiles_32x32.png') %>');
  game.load.image('tiles2', '<%= image_path('sheet.png')%>');
  game.load.spritesheet('dude', '<%= image_path('dude.png') %>', 45, 48);
  game.load.tilemap('map', '<%= asset_path('gangshit.json')%>', null, Phaser.Tilemap.TILED_JSON);
  game.scale.pageAlignHorizontally = true;
  game.scale.pageAlignVertically = true;
=======
  game.load.image('background', '<%= image_path('background.png') %>');
  game.load.image('coffee', '<%= image_path('firstaid.png') %>');
  game.load.image('ground', '<%= image_path('barrel.png') %>');
  game.load.image('bottle', '<%= image_path('vodka.png') %>');
  game.load.spritesheet('dude', '<%= image_path('baddie.png') %>', 45, 48);
  game.load.tilemap('map', '<%= asset_path('super_mario.json')%>', null, Phaser.Tilemap.TILED_JSON);
  game.scale.pageAlignHorizontally = true;

  game.scale.pageAlignVertically = true;

// game.scale.pageAlignVertically = true;


>>>>>>> 0d94af20f03f280542479c2f7ef16295a13053b2
}

var player;
var platforms;
var cursors;
var coffees;
var bottles;
var score = 0;
var scoreText;
var map;
var layer;

// *********
// LOADING IMAGES TO SCREEN



// ****************** CREATING PLAYER AND MOVEMENTS
function create() {

<<<<<<< HEAD
    game.physics.startSystem(Phaser.Physics.ARCADE);
    game.map = game.add.tilemap('map');

    game.map.addTilesetImage('Tilesheet','tiles');
    game.map.addTilesetImage('sheet2', 'tiles2');
    game.groundLayer = game.map.createLayer('Tile Layer 1');
    
    game.map.setCollisionBetween(1, 100, true, 'Tile Layer 1');
    
    
    
=======

    // map = game.add.tilemap('map');
    // map.addTilesetImage('ground');
    // map.addTilesetImage('background');


    // game.physics.startSystem(Phaser.Physics.ARCADE);
>>>>>>> 0d94af20f03f280542479c2f7ef16295a13053b2

    

<<<<<<< HEAD
    game.world.setBounds(110, 0);
=======
    game.physics.startSystem(Phaser.Physics.ARCADE);


game.world.setBounds(100,0);

>>>>>>> 0d94af20f03f280542479c2f7ef16295a13053b2

    game.add.sprite(0, 0, 'background');



    platforms = game.add.group();

    platforms.enableBody = true;



    var ground = platforms.create(0, game.world.height - 0, 'ground');

    ground.scale.setTo(0, 0);

    ground.body.immovable = true;

    var ledge = platforms.create(100, 'ground');
    ledge.body.immovable = true;

    ledge = platforms.create(250,300, 'ground');

    ledge.body.immovable = true;

    player = game.add.sprite(32, game.world.height - 150, 'dude');

    game.physics.arcade.enable(player);

    game.camera.follow(player);

    player.body.bounce.y = 0.2;
    player.body.gravity.y = 1100;
    player.body.collideWorldBounds = true;

    player.animations.add('left', [3,4, 5], 10, true);
    player.animations.add('right', [ 6,7,8], 10, true);

// COFFEE ITEMS?

  coffees = game.add.group();

  coffees.enableBody = true;
        for (var i = 0; i < 10; i++)
        {
          var coffee = coffees.create(i * 70, 20, 'coffee');

          coffee.body.gravity.y = 700;

          coffee.body.bounce.y = 0.5 + Math.random() * 0.5;
        }

// BOTTLE ITEMS

        bottles = game.add.group();

        bottles.enableBody = true;
    for (var i = 0; i < 20; i++)
    {
        var bottle = bottles.create(i * 80, 0, 'bottle');

        bottle.body.gravity.y = 900;

        bottle.body.bounce.y = 0.2 + Math.random() * 0.2;
    }

// PLATFORMS ITEMS
    for (var i = 0; i < 20; i++)
    {
        var ledge = platforms.create(i * 105, 180, 'ground');   

        ledge.body.immovable = true;

        ground.body.bounce.y = 0.2 + Math.random() * 0.2;
    }


<<<<<<< HEAD
// SCORE TEXT
    scoreText = game.add.text(500, 0, 'Hello', { fontSize: '32px', fill: 'black' });
    console.log(scoreText);
    // healthText = game.add.text(500,0, Health:)
    cursors = game.input.keyboard.createCursorKeys();
=======
 game.input.onDown.add(fade, this);


            // SCORE TEXT


    scoreText = game.add.text(500, 0, 'Drinks: 0', { fontSize: '32px', fill: 'white' });

    cursors = game.input.keyboard.createCursorKeys();
    this.add
        .text(100, 0, "run ⇨ jump ⇧ back ⇦ \nDon't Fall ",{
          font: "18px monospace",
          fill: "#000000",
          // padding: { x: 20, y: 10 },
          backgroundColor: "#ffffff"
        })

>>>>>>> 0d94af20f03f280542479c2f7ef16295a13053b2
}

// *********************************************
 // UPDATING MOVEMENT AND GRAVITY WITH SCORE ADDED

function update() {
    var hitPlatform = game.physics.arcade.collide(player, platforms);
    game.physics.arcade.collide(bottles, platforms);

    game.physics.arcade.overlap(player, bottles, collectDiamond, null, this)

    game.physics.arcade.collide(coffees, platforms);
    game.physics.arcade.collide(player, game.groundLayer);

    game.physics.arcade.overlap(player, coffees, collectCoffee, null, this)


    player.body.velocity.x = 0;

    cursors = game.input.keyboard.createCursorKeys();

    if (cursors.left.isDown)
    {
        player.body.velocity.x = -150;

        player.animations.play('left');
    }
    else if (cursors.right.isDown)
    {
        player.body.velocity.x = 150;

        player.animations.play('right');
    }
    else
    {
        player.animations.stop();

        player.frame = 1;
    }

    if (cursors.up.isDown && player.body.touching.down && hitPlatform)
    {
        player.body.velocity.y = -350;
    }

<<<<<<< HEAD
    // if (score === 4) {
    //   game.world.setBounds(500, 0);
    //    alert('You are drunk! Go Home!!')
    //    score = 0
    //  }

     if (score === 3) {
            // alert('You are drunk! Go Home!!')
            score = 0
             game.camera.shake(0.005, 3000000);


          }

}
// ******************************
// Health Bar

=======


     // if (score > 3 ) {
     //        // alert('You are drunk! Go Home!!')
     //        // score = 0
     //        game.camera.fade(0x000000, 1000);
     //       }
     //       else if (score < 3){
     //         game.camera.resetFX();
     //
     //
     //     }
}
// ******************************
// Health Bar
// _text
>>>>>>> 0d94af20f03f280542479c2f7ef16295a13053b2

// *****************************************
function collectDiamond (player, bottle) {
  bottle.kill()
  score += 1
<<<<<<< HEAD
  scoreText.text = 'Drinks: ' + score; 

  let energy = document.getElementById("energy");

  energy.value -= 1;
  if (energy.value === 0){
    alert('game over!!')
  } 
=======
  scoreText.text = 'Drinks: ' + score;
  game.camera.fade(0x000000, 4000);

  let energy = document.getElementById("energy");

  energy.value -= 2;
  if (energy.value === 0){
    alert('game over!!')
    window.location.reload(false);
  }


    // alert('game over!! Your are way to drunk');

>>>>>>> 0d94af20f03f280542479c2f7ef16295a13053b2

}

function collectCoffee (player, coffee) {
  coffee.kill()
  score -= 1
  let energy = document.getElementById("energy")

  energy.value += 5;
  scoreText.text = 'Drinks: ' + score
<<<<<<< HEAD
}
=======
}



// ************************************

// POP UP
>>>>>>> 0d94af20f03f280542479c2f7ef16295a13053b2
